{"version":3,"sources":["Pages/AnotherProfile.js","ComposedComponents/MainNavbar.js"],"names":["AnotherProfile","props","history","useHistory","nanoidUpper","useParams","nanoid","toUpperCase","useState","fullname","setFullname","genelinks","setGenelinks","useEffect","a","regex_verification","test","console","log","push","axios","get","then","data","catch","err","success","message","profile","xs","className","map","link","type","uri","MainNavbar","links","useSelector","state","session","mainNavbar","isOpen","setIsOpen","color","light","expand","tag","Link","to","onClick","navbar","name"],"mappings":"uRAQe,SAASA,EAAeC,GAEnC,IAAMC,EAAUC,cAEVC,EADWC,cAAVC,OACoBC,cAJc,EAKTC,qBALS,mBAKlCC,EALkC,KAKxBC,EALwB,OAMPF,mBAAS,IANF,mBAMlCG,EANkC,KAMvBC,EANuB,KA0BzC,OAlBAC,oBAAS,sBAAC,8BAAAC,EAAA,6DACAC,EAAqB,iBAAiBC,KAAKZ,GACjDa,QAAQC,IAAId,GACRW,GAAoBb,EAAQiB,KAAK,QAH/B,SAKgBC,IAAMC,IAAN,2CAA8CjB,IACnDkB,MAAK,SAACC,GAAD,OAAQA,EAAKA,QAClBC,OAAM,SAAAC,GAAG,MAAG,CAACC,SAAS,EAAOC,QAAQ,uCAPhD,OAKAC,EALA,OASNX,QAAQC,IAAIU,GACRA,EAAQF,SAASxB,EAAQiB,KAAK,QAElCT,EAAYkB,EAAQnB,UACpBG,EAAagB,EAAQjB,WAbf,4CAeR,IAIN,eAAC,IAAD,WACI,cAAC,IAAD,CAAKkB,GAAG,KAAR,SACI,cAAC,IAAD,UACI,cAAC,IAAD,QAGR,cAAC,IAAD,UACI,cAAC,IAAD,CAAKA,GAAG,KAAKC,UAAU,cAAvB,SACA,6BAAKrB,QAGT,cAAC,IAAD,UACI,cAAC,IAAD,CAAKoB,GAAG,IAAIC,UAAU,sBAAtB,SACE,eAAC,IAAD,WACE,gCACI,+BACA,wCACA,kDAGJ,gCACKnB,EAAUoB,KAAI,SAACC,GACZ,OACI,+BACA,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,0B,uICnBnBC,IA3BI,SAAClC,GAElB,IAAMmC,EAAQC,aAAY,SAACC,GAAD,OAASA,EAAMC,QAAQC,cAFrB,EAIAhC,oBAAS,GAJT,mBAIrBiC,EAJqB,KAIbC,EAJa,KAQ5B,OACE,8BACE,eAAC,IAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,OAAO,KAAnC,UACE,cAAC,IAAD,CAAcC,IAAKC,IAAMC,GAAG,IAA5B,uBACA,cAAC,IAAD,CAAeC,QANN,kBAAMP,GAAWD,MAO1B,cAAC,IAAD,CAAUA,OAAQA,EAAQS,QAAM,EAAhC,SACE,cAAC,IAAD,CAAKpB,UAAU,UAAUoB,QAAM,EAA/B,SACGd,EAAML,KAAI,SAACC,GACX,OACE,cAAC,IAAD,UAAS,cAAC,IAAD,CAASc,IAAKC,IAAMC,GAAIhB,EAAKE,IAA7B,SAAmCF,EAAKmB","file":"static/js/8.285cb299.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { set } from 'mongoose';\r\nimport {Fragment, useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport {Col, Container, Row, Table} from 'reactstrap';\r\nimport MainNavbar from '../ComposedComponents/MainNavbar';\r\n\r\nexport default function AnotherProfile(props){\r\n\r\n    const history = useHistory();\r\n    const {nanoid} = useParams();\r\n    const nanoidUpper = nanoid.toUpperCase();\r\n    const [fullname, setFullname] = useState();\r\n    const [genelinks, setGenelinks] = useState([]);\r\n\r\n    useEffect(async ()=>{\r\n        const regex_verification = /^[A-Z1-9]{10}$/.test(nanoidUpper);\r\n        console.log(nanoidUpper)\r\n        if(!regex_verification) history.push('/404');\r\n\r\n        const profile = await axios.get(`/api/profile/profile-information/${nanoidUpper}`)\r\n                        .then((data)=>data.data)\r\n                        .catch(err=>({success: false, message:\"Try again later. Internal error.\"}));\r\n\r\n        console.log(profile)\r\n        if(!profile.success) history.push('/404');\r\n        \r\n        setFullname(profile.fullname);\r\n        setGenelinks(profile.genelinks);\r\n\r\n    },[])\r\n    \r\n\r\n    return (\r\n<Container>\r\n    <Row xs=\"12\">\r\n        <Col>\r\n            <MainNavbar />\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col xs=\"12\" className=\"text-center\">\r\n        <h1>{fullname}</h1>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col xs=\"4\" className=\"mx-auto text-center\">\r\n          <Table>\r\n            <thead>\r\n                <tr>\r\n                <th>Source</th>\r\n                <th>Link / Code</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {genelinks.map((link)=>{\r\n                    return (\r\n                        <tr>\r\n                        <td>{link.type}</td>\r\n                        <td>{link.uri}</td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n                \r\n            </tbody>\r\n            </Table>\r\n        </Col>\r\n    </Row>\r\n</Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst MainNavbar = (props) => {\r\n\r\n  const links = useSelector((state)=>state.session.mainNavbar);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand  tag={Link} to=\"/\">genelinks</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {links.map((link)=>{\r\n             return (\r\n               <NavItem><NavLink tag={Link} to={link.uri}>{link.name}</NavLink></NavItem>\r\n             );  \r\n            })}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainNavbar;"],"sourceRoot":""}